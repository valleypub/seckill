spring:
  # 静态资源处理
  resources:
    #默认是启用的
    add-mappings: true
    cache:
      cachecontrol:
        # 缓存响应时间，单位是秒，虾苗3600表示缓存一个小时
        max-age: 3600
    chain:
      # 资源链启动缓存，默认启动，因为静态资源有很多，这里指的是是否对所有资源启用缓存
      cache: true
      # 启动资源连，默认是禁用的
      enabled: true
      # 启用压缩资源(gzip )，默认是禁用
      compressed: true
      # 启动h5应用缓存，默认禁用
      html-application-cache: true
    # 设置静态资源的目录
    static-locations: classpath:/static/

  # thymeleaf相关
  thymeleaf:
    # 关闭缓存
    cache: false
  datasource:
    # 没有cj的是5.x版本的mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    # seckill是要待会为这个项目创建的数据库
    url: jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: Kang.81163
    # 连接池：这里使用的是SpringBoot自带的hikari 而没有用 c3p0 、dbutils
    hikari:
      # 连接池名
      pool-name: DateHikariCP
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接存货最大时间：默认600000（10分钟）
      idle-timeout: 1800000
      # 最大连接数，默认是10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0表示永久存活、默认是1800000（30分钟）
      max-lifetime: 1800000
      # 连接超时时间：默认是30000（30秒）
      connection-timeout: 30000
      # 类似于心跳机制，测试链接是否可用的查询语句，如果能查处结果说明我们的链接是没有问题的
      connection-test-query: SELECT 1

  redis:
    # 服务器地址
    # 在windows端测试时使用这个
    host: 47.98.187.186
    # host: 127.0.0.1//在服务器上部署时使用这个
    # 默认的端口就是6379
    port: 6379
    # 使用的数据库，默认是0库，总共有16个 0-15
    database: 0
    # 连接超时时间
    timeout: 10000ms
    # 对连接池进行一些配置
    lettuce:
      pool:
        # 最大连接数，默认就是8
        max-active: 8
        # 最大连接阻塞等待时间
        max-wait: 10000ms
        # 最大空闲连接，默认是8
        max-idle: 200
        # 最小空闲连接，默认是0
        min-idle: 5
  rabbitmq:
    # 服务器
    host: 47.98.187.186
    # 配置用户，这里直接使用默认的guest用户，用户名密码都是guest
    username: guest
    password: guest
    # 虚拟主机
    virtual-host: /
    # java使用的端口
    port: 5672
    listener:
      simple:
        # 消费者最小数量
        concurrency: 10
        # 消费者最大数量
        max-concurrency: 10
        # 限制消费者每次只能处理一条消息
        prefetch: 1
        # 启动时是否默认启动容器，默认true
        auto-startup: true
        # 当消息被拒绝时是否重新进入队列
        default-requeue-rejected: true
    # 模板相关的配置
    template:
      retry:
        # 开启重试，默认为false
        enabled: true
        # 重试时间
        initial-interval: 1000ms
        # 重试最大次数，默认是3
        max-attempts: 3
        # 重试最大间隔时间，默认10000ms
        max-interval: 10000ms
        # 重试的间隔乘数，比如配2.0，第一次就等于10s，第二次就等于20s,第三次就等于40s
        multiplier: 1



mybatis-plus:
  # 配置Mapper.xml配置文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置mybatis数据返回类型别名（默认别名是类名），对应的是java目录下的那个总包
  type-aliases-package: com.xxxx.seckill.pojo

# mybatis sql 打印（方法接口所在的包，不是Mapper.xml所在的包）
logging:
  level:
    com.xxxx.seckill.mapper: debug
